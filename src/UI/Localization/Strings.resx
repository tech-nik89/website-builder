<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddReference" xml:space="preserve">
    <value>Add reference</value>
  </data>
  <data name="AutoCloseCompilingForm" xml:space="preserve">
    <value>Close automatically after successful build.</value>
  </data>
  <data name="AutoSave" xml:space="preserve">
    <value>Auto Save</value>
  </data>
  <data name="Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="BuildAndOpenProject" xml:space="preserve">
    <value>Build and open Project</value>
  </data>
  <data name="BuildError" xml:space="preserve">
    <value>Build Error</value>
  </data>
  <data name="BuildProject" xml:space="preserve">
    <value>Build Project</value>
  </data>
  <data name="BuildStarted" xml:space="preserve">
    <value>Build started ...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ContentSettings" xml:space="preserve">
    <value>Content Settings</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditContent" xml:space="preserve">
    <value>Edit Content</value>
  </data>
  <data name="Editor" xml:space="preserve">
    <value>Editor</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ImportIntoProject" xml:space="preserve">
    <value>Import into project</value>
  </data>
  <data name="Included" xml:space="preserve">
    <value>Included</value>
  </data>
  <data name="IncludeInMenu" xml:space="preserve">
    <value>Include in Menu</value>
  </data>
  <data name="InsertAbove" xml:space="preserve">
    <value>Insert Above</value>
  </data>
  <data name="InsertAsChild" xml:space="preserve">
    <value>Insert as Child</value>
  </data>
  <data name="InsertBelow" xml:space="preserve">
    <value>Insert Below</value>
  </data>
  <data name="InsertLink" xml:space="preserve">
    <value>Insert Link</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="Media" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="MessageOutputPathRequired" xml:space="preserve">
    <value>The output directory has to be configured.</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PageProperties" xml:space="preserve">
    <value>Page Properties</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="PathName" xml:space="preserve">
    <value>Path Name</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectFilesFilter" xml:space="preserve">
    <value>Website Projects (*{0})|*{0}</value>
  </data>
  <data name="ProjectLoadErrorMessage" xml:space="preserve">
    <value>The project could not be loaded.</value>
  </data>
  <data name="ProjectSettings" xml:space="preserve">
    <value>Project Settings</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAndClose" xml:space="preserve">
    <value>Save and close</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save As ...</value>
  </data>
  <data name="SectionListItem" xml:space="preserve">
    <value>Section {0}</value>
  </data>
  <data name="SetStartPage" xml:space="preserve">
    <value>Set as Start Page</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeFilesFilter" xml:space="preserve">
    <value>Theme Files (*{0})|*{0}</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UglyURLs" xml:space="preserve">
    <value>Ugly URLs</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="PageDeleteConfirmMessage" xml:space="preserve">
    <value>Do you really want to remove the selected page? All sub-pages will be removed as well.</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Footer" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="FooterLinkDeleteConfirmMessage" xml:space="preserve">
    <value>Do you really want to remove the selected link?</value>
  </data>
  <data name="FooterSectionDeleteConfirmMessage" xml:space="preserve">
    <value>Do you really want to remove the selected footer section?</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="Target" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="DirtyProjectConfirmSaveMessage" xml:space="preserve">
    <value>The current project has unsaved changes. Do you want so save them before exit?</value>
  </data>
  <data name="DirtyProjectConfirmSaveTitle" xml:space="preserve">
    <value>Confirm save</value>
  </data>
  <data name="BuildSelectedPageOnly" xml:space="preserve">
    <value>Build selected page only</value>
  </data>
  <data name="BuildThisPageOnly" xml:space="preserve">
    <value>Build this page only</value>
  </data>
  <data name="ClearOutputDirectory" xml:space="preserve">
    <value>Clear output directory</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutFormat" xml:space="preserve">
    <value>About {0}</value>
  </data>
  <data name="VersionFormat" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="WrittenByFormat" xml:space="preserve">
    <value>Written by {0}</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="KeywordsDescription" xml:space="preserve">
    <value>One keyword per line.</value>
  </data>
  <data name="Meta" xml:space="preserve">
    <value>Meta</value>
  </data>
  <data name="Robots" xml:space="preserve">
    <value>Robots</value>
  </data>
  <data name="RobotsDescription" xml:space="preserve">
    <value>The desired behavior of search engine's crawlers can be defined. Usually, they comply with the defined rules, but they don't have to. This is no guarantee, that the page can't be found.</value>
  </data>
  <data name="RobotsNoFollow" xml:space="preserve">
    <value>Don't follow links on this page (nofollow)</value>
  </data>
  <data name="RobotsNoIndex" xml:space="preserve">
    <value>Don't add this page to the index (noindex)</value>
  </data>
  <data name="RecentProjects" xml:space="preserve">
    <value>Recent Projects</value>
  </data>
  <data name="Publishing" xml:space="preserve">
    <value>Publishing</value>
  </data>
  <data name="PublishingTarget" xml:space="preserve">
    <value>Publishing Target</value>
  </data>
  <data name="PublishItemDeleteConfirmMessage" xml:space="preserve">
    <value>Do you really want to delete this publishing target?</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Webserver" xml:space="preserve">
    <value>Webserver</value>
  </data>
  <data name="Plugins" xml:space="preserve">
    <value>Plugins</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="DirtyPageConfirmSaveMessage" xml:space="preserve">
    <value>The current content has unsaved changes. Do you want so save them before exit?</value>
  </data>
  <data name="ContentAdd" xml:space="preserve">
    <value>Add Content</value>
  </data>
  <data name="ContentDelete" xml:space="preserve">
    <value>Delete Content</value>
  </data>
  <data name="ContentEdit" xml:space="preserve">
    <value>Edit Content</value>
  </data>
  <data name="PageAdd" xml:space="preserve">
    <value>Add Page</value>
  </data>
  <data name="PageDelete" xml:space="preserve">
    <value>Delete Page</value>
  </data>
  <data name="PageEdit" xml:space="preserve">
    <value>Edit Page</value>
  </data>
  <data name="PageStructure" xml:space="preserve">
    <value>Page Structure</value>
  </data>
  <data name="DoubleClickForDetails" xml:space="preserve">
    <value>Double click on a plugin to show details.</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="BaseURL" xml:space="preserve">
    <value>Base URL</value>
  </data>
  <data name="CompilerErrors" xml:space="preserve">
    <value>Error List</value>
  </data>
  <data name="SitemapGenerate" xml:space="preserve">
    <value>Generate Sitemap</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="ChangeFrequency" xml:space="preserve">
    <value>Change Frequency</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="Hourly" xml:space="preserve">
    <value>Hourly</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>Never</value>
  </data>
  <data name="Weekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="Yearly" xml:space="preserve">
    <value>Yearly</value>
  </data>
  <data name="ContentDeleteConfirmMessage" xml:space="preserve">
    <value>Do you really want to remove the selected content?</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="SSLRedirect" xml:space="preserve">
    <value>SSL Redirect</value>
  </data>
  <data name="DownloadCompleteAskRun" xml:space="preserve">
    <value>The new software version has been downloaded. Do you want to install it now?</value>
  </data>
  <data name="DownloadNow" xml:space="preserve">
    <value>Download Now</value>
  </data>
  <data name="ReleaseNotes" xml:space="preserve">
    <value>Release Notes</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateAvailableMessage" xml:space="preserve">
    <value>A new software version is available for download.</value>
  </data>
  <data name="UpdateCheck" xml:space="preserve">
    <value>Check for Update</value>
  </data>
  <data name="UpdateNotAvailableMessage" xml:space="preserve">
    <value>You are already running the latest software version.</value>
  </data>
  <data name="VersionAvailable" xml:space="preserve">
    <value>Available Version</value>
  </data>
  <data name="VersionCurrent" xml:space="preserve">
    <value>Your Version</value>
  </data>
</root>